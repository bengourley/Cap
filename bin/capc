#!/usr/bin/env node

/**
 * Module dependencies.
 */

var program = require('commander'),
		fs = require('fs'),
		Parser = require('jison').Parser,
		Lexer = require('../lib/Lexer'),
		nodes = require('../lib/Nodes'),
		parser = require('../lib/parser.js').parser;

var compile = function () {

	fs.readFile(program.args[0], 'utf8', function (err, data) {

		// Assign custom lexer
		parser.lexer = new Lexer();
	
		// Add AST nodes for use in grammar
		parser.yy.nodes = nodes;
		var AST = parser.parse(data);
		//console.log(AST);
		console.log(AST.compile());

	});
};


program
	.version('0.0.1')
	.option('-p, --print', 'print the compiled js instead of outputting to file')
	.option('-t, --tree', 'pretty print the nodes in the AST instead of compiling to file')
	.option('-g, --grammar [grammar]', 're-generate the parser with the given grammar file')
	.parse(process.argv);

if (!program.args[0]) {
	console.log('No file supplied!');
} else {

	/*if (program.grammar) {
		fs.readFile(program.grammar, 'utf8', function (err, data) {
			fs.writeFile('./p.js', new Parser(data).generate(), 'utf8', function (err) {
				console.log('Grammar recompiled');
				compile();
			});
		});
	} else {*/

	compile();

	//}

}
