#!/usr/bin/env node

/**
 * Module dependencies.
 */

var program = require('commander'),
    createCompiler = require('../lib/compiler'),
    createCli = require('../lib/cli');

program
  .version('0.0.1')
  .option(
    '-t, --printtree',
    'print the syntax tree instead of compiling (forces --print)'
  )
  .option(
    '-p, --print',
    'print the output instead of writing to file'
  )
  .option(
    '-c, --compress',
    'compress the output'
  )
  .option(
    '-e, --targetenv <env>',
    'specify the compilation target (defaults to node)',
    'node'
  )
  .option(
    '-f, --files <a,b..>',
    'compile only the given files (comma separated list)',
    function (f) { return f.split(','); }
  );

// Custom help
program.on('--help', function(){
  console.log('  Examples:');
  console.log('');
  console.log('      $ capc');
  console.log('');
  console.log('    Recursively scans the current directory and');
  console.log('    and compiles all the `.cap` files it finds');
  console.log('');
  console.log('      $ capc -e browser main');
  console.log('');
  console.log('    Recursively scans the current directory and');
  console.log('    and compiles all the `.cap` files, bundling');
  console.log('    them into a single file `main.browser.cap.js` with some');
  console.log('    boilerplate code that will make it run in the');
  console.log('    browser. Uses the given file as the program entry point');
  console.log('');
  console.log('      $ capc -e node -f example.cap');
  console.log('');
  console.log('    Compiles example.cap \u2192 example.cap.js for running in node');
  console.log('');
});

program.parse(process.argv);

// Run the cli with args and pass in
// an asynchronous error handler
createCli(program, function (err) {
  if (['ParseError', 'SemanticError'].indexOf(err.type) !== -1) {
    console.log(err.message);
  } else {
    console.log('An unknown error occured. Sorry! The error was:');
    console.log(err.stack);
  }
}).run();